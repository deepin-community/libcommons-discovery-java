Index: b/src/test/org/apache/commons/discovery/test/TestAll.java
===================================================================
--- a/src/test/org/apache/commons/discovery/test/TestAll.java
+++ b/src/test/org/apache/commons/discovery/test/TestAll.java
@@ -41,6 +41,7 @@
 import org.apache.commons.discovery.tools.ManagedProperties;
 import org.apache.commons.discovery.tools.PropertiesHolder;
 import org.apache.commons.discovery.tools.SPInterface;
+import org.apache.commons.discovery.tools.Service;
 import org.apache.commons.logging.Log;
 import org.junit.Test;
 
@@ -263,7 +264,7 @@
         ClassLoaders loaders = ClassLoaders.getAppLoaders(TestInterface2.class, getClass(), false);
 
         DiscoverClass discover = new DiscoverClass(loaders);
-        Class<? extends TestInterface2> implClass = discover.find(TestInterface2.class);
+        Class<? extends TestInterface2> implClass = discover.<TestInterface2,TestInterface2>find(TestInterface2.class);
 
         assertTrue("Failed to find an implementation class", implClass != null);
         assertEquals("org.apache.commons.discovery.test.TestImpl2_1", implClass.getName());
@@ -274,7 +275,7 @@
         ClassLoaders loaders = ClassLoaders.getAppLoaders(TestInterface3.class, getClass(), false);
 
         DiscoverClass discover = new DiscoverClass(loaders);
-        Class<? extends TestInterface3> implClass = discover.find(TestInterface3.class);
+        Class<? extends TestInterface3> implClass = discover.<TestInterface3,TestInterface3>find(TestInterface3.class);
 
         assertTrue("Failed to find an implementation class", implClass != null);
         assertEquals("org.apache.commons.discovery.test.TestImpl3$InnerTestImpl", implClass.getName());
@@ -297,7 +298,7 @@
         final int expectedLogImplementations = 2;
         int actualLogImplementations = 0;
 
-        Enumeration<? extends Log> logImplementations = providers(newSPInterface(Log.class,
+        Enumeration<? extends Log> logImplementations = Service.<Log,Log>providers(newSPInterface(Log.class,
                 new Class<?>[]{ String.class },
                 new Object[]{ getClass().getName() }),
                 null);
